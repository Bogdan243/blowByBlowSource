{"version":3,"file":"static/js/773.3fcc6d92.chunk.js","mappings":"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","sources":["views/sample-page/ForChooseCard.js","views/sample-page/index.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { Box, Grid, Card, CardContent, IconButton, Button, MenuItem, TextField, Typography, Container } from '@mui/material';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { red } from '@mui/material/colors';\r\n\r\nconst cardStyle = {\r\n    minWidth: 300,\r\n    minHeight: 350,\r\n    maxWidth: 300,\r\n    boxShadow: 3\r\n};\r\n\r\nconst PhraseCard = (props) => {\r\n    return (\r\n        <>\r\n            <Link\r\n                to={'/sliding'}\r\n                state={{\r\n                    from: props.from,\r\n                    to: props.to,\r\n                    currentNum: props.currentNum,\r\n                    customList: props.customList,\r\n                    slideMode: false\r\n                }}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <Card sx={cardStyle}>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Box margin=\"10px\">\r\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                    #{props.num}\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton margin=\"10px\" size=\"small\" aria-label=\"add to favorites\">\r\n                                <FavoriteIcon color={props.isFavourite} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <CardContent>\r\n                        <Typography variant=\"h3\" component=\"div\" textAlign=\"center\" mt={2}>\r\n                            {props.phrase}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ mb: 3, mt: 3 }} textAlign=\"center\">\r\n                            {props.example}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhraseCard;\r\n","import { useLocation } from 'react-router-dom';\r\n// material-ui\r\nimport { Box, Grid, Card, CardActions, CardContent, IconButton, Button, MenuItem, TextField, Typography, Container } from '@mui/material';\r\nimport { gridSpacing } from 'store/constant';\r\nimport ForChooseCard from './ForChooseCard';\r\nimport readExcelFile from './../utilities/ExcelReader.js';\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nlet checkFavCard = (num) => {\r\n    let appProp = JSON.parse(localStorage.getItem('appProp'));\r\n\r\n    if (appProp == null) {\r\n        localStorage.setItem('appProp', JSON.stringify({ favStorage: [], checkedList: [] }));\r\n        appProp = JSON.parse(localStorage.getItem('appProp'));\r\n    }\r\n\r\n    let output = 'disable';\r\n\r\n    if (appProp.favStorage.indexOf(num) != -1) {\r\n        output = 'error';\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nfunction SamplePage(props) {\r\n    const location = useLocation();\r\n    const state = location.state;\r\n    console.log('From sample', state);\r\n    let cardList = [];\r\n\r\n    let phraseList = readExcelFile(state.from, state.to);\r\n\r\n    for (let index = 0; index < phraseList.length; index++) {\r\n        cardList.push(\r\n            <Grid item m={1} key={index}>\r\n                <ForChooseCard\r\n                    phrase={phraseList[index]['English phrase ']}\r\n                    example={phraseList[index].Example}\r\n                    num={state.from + index + 1}\r\n                    from={state.from}\r\n                    to={state.to}\r\n                    currentNum={index}\r\n                    isFavourite={checkFavCard(state.from + index + 1)}\r\n                ></ForChooseCard>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MainCard title=\"Card list\">\r\n                <Grid container spacing={gridSpacing} justifyContent=\"center\">\r\n                    {cardList}\r\n                </Grid>\r\n            </MainCard>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SamplePage;\r\n"],"names":["cardStyle","minWidth","minHeight","maxWidth","boxShadow","props","_jsx","_Fragment","children","Link","to","state","from","currentNum","customList","slideMode","style","textDecoration","_jsxs","Card","sx","Grid","container","justifyContent","item","Box","margin","Typography","fontSize","color","gutterBottom","num","IconButton","size","FavoriteIcon","isFavourite","CardContent","variant","component","textAlign","mt","phrase","mb","example","checkFavCard","appProp","JSON","parse","localStorage","getItem","setItem","stringify","favStorage","checkedList","output","indexOf","useLocation","console","log","cardList","phraseList","readExcelFile","index","length","push","m","ForChooseCard","Example","MainCard","title","spacing","gridSpacing"],"sourceRoot":""}