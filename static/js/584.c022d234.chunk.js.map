{"version":3,"file":"static/js/584.c022d234.chunk.js","mappings":"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","sources":["views/sample-page/ForChooseCard.js","views/utilities/TablerIcons.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { Box, Grid, Card, CardContent, IconButton, Button, MenuItem, TextField, Typography, Container } from '@mui/material';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { red } from '@mui/material/colors';\r\n\r\nconst cardStyle = {\r\n    minWidth: 300,\r\n    minHeight: 350,\r\n    maxWidth: 300,\r\n    boxShadow: 3\r\n};\r\n\r\nconst PhraseCard = (props) => {\r\n    return (\r\n        <>\r\n            <Link\r\n                to={'/sliding'}\r\n                state={{\r\n                    from: props.from,\r\n                    to: props.to,\r\n                    currentNum: props.currentNum,\r\n                    customList: props.customList,\r\n                    slideMode: false\r\n                }}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <Card sx={cardStyle}>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Box margin=\"10px\">\r\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                                    #{props.num}\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton margin=\"10px\" size=\"small\" aria-label=\"add to favorites\">\r\n                                <FavoriteIcon color={props.isFavourite} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <CardContent>\r\n                        <Typography variant=\"h3\" component=\"div\" textAlign=\"center\" mt={2}>\r\n                            {props.phrase}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ mb: 3, mt: 3 }} textAlign=\"center\">\r\n                            {props.example}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhraseCard;\r\n","import { useLocation } from 'react-router-dom';\r\n// material-ui\r\nimport { Box, Grid, Card, CardActions, CardContent, IconButton, Button, MenuItem, TextField, Typography, Container } from '@mui/material';\r\nimport { gridSpacing } from 'store/constant';\r\nimport ForChooseCard from './../sample-page/ForChooseCard';\r\nimport readExcelFile from './../utilities/ExcelReader.js';\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nlet getFavCards = () => {\r\n    let appProp = JSON.parse(localStorage.getItem('appProp'));\r\n    console.log('appProp', appProp);\r\n    if (appProp == null) {\r\n        localStorage.setItem('appProp', JSON.stringify({ favStorage: [], checkedList: [] }));\r\n        appProp = JSON.parse(localStorage.getItem('appProp'));\r\n    }\r\n\r\n    return appProp.favStorage;\r\n};\r\n\r\nlet checkFavCard = (num) => {\r\n    let appProp = JSON.parse(localStorage.getItem('appProp'));\r\n    console.log('appProp', appProp);\r\n    if (appProp == null) {\r\n        localStorage.setItem('appProp', JSON.stringify({ favStorage: [], checkedList: [] }));\r\n        appProp = JSON.parse(localStorage.getItem('appProp'));\r\n    }\r\n\r\n    let output = 'disable';\r\n\r\n    if (appProp.favStorage.indexOf(num) != -1) {\r\n        output = 'error';\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nfunction TablerIcons(props) {\r\n    const location = useLocation();\r\n    const state = location.state;\r\n    console.log('From sample', state);\r\n    let cardList = [];\r\n\r\n    let favCardNumList = getFavCards();\r\n    let phraseList = [];\r\n\r\n    for (let index = 0; index < favCardNumList.length; index++) {\r\n        console.log(favCardNumList[index]);\r\n        phraseList.push({ cardInfo: readExcelFile(favCardNumList[index] - 1, favCardNumList[index])[0], num: favCardNumList[index] });\r\n    }\r\n\r\n    for (let index = 0; index < phraseList.length; index++) {\r\n        cardList.push(\r\n            <Grid item m={1} key={index}>\r\n                <ForChooseCard\r\n                    phrase={phraseList[index].cardInfo['English phrase ']}\r\n                    example={phraseList[index].cardInfo.Example}\r\n                    num={phraseList[index].num}\r\n                    from={null}\r\n                    to={null}\r\n                    customList={phraseList}\r\n                    currentNum={index}\r\n                    isFavourite={checkFavCard(phraseList[index].num)}\r\n                ></ForChooseCard>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MainCard title=\"Card list\" sx={{ minHeight: '630px' }}>\r\n                <Grid container spacing={gridSpacing} justifyContent=\"center\">\r\n                    {cardList}\r\n                </Grid>\r\n            </MainCard>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TablerIcons;\r\n"],"names":["cardStyle","minWidth","minHeight","maxWidth","boxShadow","props","_jsx","_Fragment","children","Link","to","state","from","currentNum","customList","slideMode","style","textDecoration","_jsxs","Card","sx","Grid","container","justifyContent","item","Box","margin","Typography","fontSize","color","gutterBottom","num","IconButton","size","FavoriteIcon","isFavourite","CardContent","variant","component","textAlign","mt","phrase","mb","example","checkFavCard","appProp","JSON","parse","localStorage","getItem","console","log","setItem","stringify","favStorage","checkedList","output","indexOf","useLocation","cardList","favCardNumList","getFavCards","phraseList","index","length","push","cardInfo","readExcelFile","m","ForChooseCard","Example","MainCard","title","spacing","gridSpacing"],"sourceRoot":""}